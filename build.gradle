plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.test'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(
            'org.hibernate:hibernate-envers:6.6.6.Final',
            'org.mapstruct:mapstruct:1.6.3',
            'org.mapstruct:mapstruct:1.6.3',
            'software.amazon.awssdk:s3:2.20.130',
            'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-security',
            'org.springframework.boot:spring-boot-starter-web',
            'org.flywaydb:flyway-core',
            'org.flywaydb:flyway-database-postgresql',
            'org.springframework.boot:spring-boot-starter-validation',
            'org.springframework.boot:spring-boot-starter-mail',
            'io.minio:minio:8.5.17'
    )

    compileOnly(
            'org.projectlombok:lombok'
    )

    developmentOnly(
            'org.springframework.boot:spring-boot-devtools',
            'org.springframework.boot:spring-boot-docker-compose'
    )

    runtimeOnly(
            'org.postgresql:postgresql'
    )

    annotationProcessor(
            'org.projectlombok:lombok',
            'org.mapstruct:mapstruct-processor:1.6.3'
    )

    testImplementation(
            'org.springframework.boot:spring-boot-starter-test',
            'org.springframework.security:spring-security-test'
    )

    testRuntimeOnly(
            'org.junit.platform:junit-platform-launcher'
    )
}

tasks.named('test') {
    useJUnitPlatform()
}